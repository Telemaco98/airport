/* Airport_i
 * Author: ohara
 * Creation date: 06/11/2019
 */

IMPLEMENTATION Airport_i
REFINES Airport

IMPORTS
    Airplane, Track, Gate

SEES 
    Airport_ctx

CONCRETE_VARIABLES
    landing_i, 
    parking_i,
    status_airplane_i

INVARIANT
    landing_i : 0..sz_tracks --> AIRPLANE 
    & dom(landing_i) = ran(landing)
    & (landing_i |>> {plane_dummy})~ = landing
    
    & parking_i : 0..sz_gates --> AIRPLANE 
    & dom(parking_i) = ran(parking)
    & (parking_i |>> {plane_dummy})~ = parking

    & status_airplane_i : AIRPLANE --> STATUS
    & status_airplane_i = status_airplane

INITIALISATION
    landing_i := (0..sz_tracks) * {plane_dummy}; 
    parking_i := (0..sz_gates) * {plane_dummy};
    status_airplane_i := AIRPLANE * {out}

OPERATIONS
    add_airplane (aa) =
        BEGIN
            add_plane(aa);
            status_airplane_i (aa) := flighting
        END;
    
    land (aa, tt) =
        BEGIN
            occupy_track(tt, aa);
            landing_i(tt) := aa;
            status_airplane_i(aa) := alighting
        END;
            
    park (aa, gg) =
        BEGIN
            occupy_gate(gg, aa);
            
            VAR ii, nsz IN
                ii :=  0;
                nsz := sz_tracks;
                
                WHILE ii < nsz
                DO VAR cc IN 
                       cc := landing_i(ii);
                       
                       IF cc = aa
                       THEN vacate_track(ii);
                            landing_i(ii) := plane_dummy
                       END
                   END;
                   ii := ii + 1    
                INVARIANT ii : 0..sz_tracks
                VARIANT nsz - ii
                END;
                parking_i(gg) := aa;
                status_airplane_i(aa) := parked
            END
        END;   
        
    board (aa) =
        BEGIN
            status_airplane_i(aa) := boarding
        END;
        
    take_track (aa, tt) =
        BEGIN
            occupy_track(tt, aa);
            
            VAR ii, nsz IN
                ii :=  0;
                nsz := sz_tracks;
                
                WHILE ii < nsz
                DO VAR cc IN 
                       cc := parking_i(ii);
                       IF cc = aa
                       THEN vacate_gate(ii);
                            status_airplane_i(aa) := departing;
                            parking_i(ii) := plane_dummy
                            
                       END
                   END;
                   ii := ii + 1    
                INVARIANT ii : 0..sz_tracks
                VARIANT nsz - ii
                END;
                landing_i(tt) := aa
            END
        END;
        
    depart (aa) = 
        BEGIN
            VAR ii, nsz IN
                ii :=  0;
                nsz := sz_tracks;
                
                WHILE ii < nsz
                DO VAR cc IN 
                       cc := landing_i(ii);
                       IF cc = aa
                       THEN vacate_track(ii);
                            landing_i(ii) := plane_dummy                            
                       END
                   END;
                   ii := ii + 1    
                INVARIANT ii : 0..sz_tracks
                VARIANT nsz - ii
                END;
                status_airplane_i(aa) := flighting
            END
        END;
        
    exclude_airplane(aa) =
        BEGIN
            remove(aa);
            status_airplane_i(aa) := out
        END;
    
    /**
     * Ask if can land on a track
     */
    bb <-- can_landing (tt) =
       BEGIN            
            VAR ii, nsz IN 
                ii := 0;
                bb := FALSE;
                nsz := sz_gates;
                
                WHILE (ii < sz_tracks)
                DO VAR pp IN 
                       pp := landing_i(ii);
                       IF tt = ii & plane_dummy = pp
                       THEN bb := TRUE
                       END
                   END;
                   ii := ii + 1
                INVARIANT ii : 0..sz_tracks
//                        & (bb = TRUE <=> #xx.(xx : 0..ii - 1 & landing_i(xx) = plane_dummy))
                VARIANT nsz - ii 
                END
            END
        END;
        
    /**
     * What's the airplane status
     */
    bb <-- query_status (aa) =
        BEGIN
            bb := status_airplane_i(aa)
        END;
      
    /**
     * The place where the airplane is parked
     */  
    gg <-- query_parked (aa) =
        BEGIN
            VAR ii, nsz, pp IN 
                ii := 0;
                gg := sz_gates;
                nsz := sz_gates;
                pp := landing_i(ii);
                
                WHILE (ii < sz_gates)
                DO 
                   pp := parking_i(ii);
                   IF aa = pp
                   THEN gg := ii
                   END; 
                   ii := ii + 1
                INVARIANT ii : 0..sz_gates
//                          (gg = ii <=> #xx.(xx : 0..ii -1 & parking_i(xx) = aa))
                VARIANT nsz - ii
                END
            END
        END
END