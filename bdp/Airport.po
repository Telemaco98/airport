THEORY ProofList IS
_f(1) & _f(2) & _f(3) & _f(28) & _f(59) & WellDefinedness_query_parked.1,(_f(70) => _f(100));
_f(1) & _f(2) & _f(3) & _f(28) & _f(33) & WellDefinedness_query_status.2,(_f(70) => _f(72));
_f(1) & _f(2) & _f(3) & _f(28) & _f(33) & WellDefinedness_query_status.1,(_f(70) => _f(71));
_f(1) & _f(2) & _f(3) & _f(28) & _f(54) & WellDefinedness_exclude_airplane.4,(_f(70) => _f(99));
_f(1) & _f(2) & _f(3) & _f(28) & _f(54) & WellDefinedness_exclude_airplane.3,(_f(70) => _f(98));
_f(1) & _f(2) & _f(3) & _f(28) & _f(54) & WellDefinedness_exclude_airplane.2,(_f(70) => _f(97));
_f(1) & _f(2) & _f(3) & _f(28) & _f(54) & WellDefinedness_exclude_airplane.1,(_f(70) => _f(96));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_exclude_airplane.2,(_f(33) & _f(77) & _f(70) => _f(72));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_exclude_airplane.1,(_f(33) & _f(77) & _f(70) => _f(71));
_f(1) & _f(2) & _f(3) & _f(28) & _f(53) & WellDefinedness_depart.2,(_f(56) & _f(70) => _f(82));
_f(1) & _f(2) & _f(3) & _f(28) & _f(53) & WellDefinedness_depart.1,(_f(56) & _f(70) => _f(90));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_depart.4,(_f(77) & _f(74) & _f(85) & _f(95) & _f(70) => _f(72));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_depart.3,(_f(77) & _f(74) & _f(85) & _f(95) & _f(70) => _f(71));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_depart.2,(_f(77) & _f(74) & _f(85) & _f(70) => _f(72));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_depart.1,(_f(77) & _f(74) & _f(85) & _f(70) => _f(71));
_f(1) & _f(2) & _f(3) & _f(28) & _f(48) & WellDefinedness_take_track.4,(_f(86) & _f(70) => _f(89));
_f(1) & _f(2) & _f(3) & _f(28) & _f(48) & WellDefinedness_take_track.3,(_f(86) & _f(70) => _f(94));
_f(1) & _f(2) & _f(3) & _f(28) & _f(48) & WellDefinedness_take_track.2,(_f(33) & _f(80) & _f(34) & _f(70) => _f(82));
_f(1) & _f(2) & _f(3) & _f(28) & _f(48) & WellDefinedness_take_track.1,(_f(33) & _f(80) & _f(34) & _f(70) => _f(81));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_take_track.4,(_f(56) & _f(77) & _f(92) & _f(75) & _f(76) & _f(93) & _f(70) => _f(79));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_take_track.3,(_f(56) & _f(77) & _f(92) & _f(75) & _f(76) & _f(93) & _f(70) => _f(78));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_take_track.2,(_f(56) & _f(77) & _f(92) & _f(75) & _f(76) & _f(70) => _f(72));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_take_track.1,(_f(56) & _f(77) & _f(92) & _f(75) & _f(76) & _f(70) => _f(71));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_board.2,(_f(92) & _f(70) => _f(72));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_board.1,(_f(92) & _f(70) => _f(71));
_f(1) & _f(2) & _f(3) & _f(28) & _f(38) & WellDefinedness_park.4,(_f(56) & _f(70) => _f(82));
_f(1) & _f(2) & _f(3) & _f(28) & _f(38) & WellDefinedness_park.3,(_f(56) & _f(70) => _f(90));
_f(1) & _f(2) & _f(3) & _f(28) & _f(38) & WellDefinedness_park.2,(_f(33) & _f(87) & _f(39) & _f(70) => _f(89));
_f(1) & _f(2) & _f(3) & _f(28) & _f(38) & WellDefinedness_park.1,(_f(33) & _f(87) & _f(39) & _f(70) => _f(88));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_park.2,(_f(86) & _f(85) & _f(84) & _f(74) & _f(70) => _f(72));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_park.1,(_f(86) & _f(85) & _f(84) & _f(74) & _f(70) => _f(71));
_f(1) & _f(2) & _f(3) & _f(28) & _f(31) & WellDefinedness_land.2,(_f(33) & _f(80) & _f(34) & _f(70) => _f(82));
_f(1) & _f(2) & _f(3) & _f(28) & _f(31) & WellDefinedness_land.1,(_f(33) & _f(80) & _f(34) & _f(70) => _f(81));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_land.4,(_f(56) & _f(77) & _f(76) & _f(75) & _f(74) & _f(73) & _f(70) => _f(72));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_land.3,(_f(56) & _f(77) & _f(76) & _f(75) & _f(74) & _f(73) & _f(70) => _f(71));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_land.2,(_f(56) & _f(77) & _f(76) & _f(75) & _f(74) & _f(70) => _f(79));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_land.1,(_f(56) & _f(77) & _f(76) & _f(75) & _f(74) & _f(70) => _f(78));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_add_airplane.2,(_f(33) & _f(69) & _f(70) => _f(72));
_f(1) & _f(2) & _f(3) & _f(28) & WellDefinedness_Precondition_add_airplane.1,(_f(33) & _f(69) & _f(70) => _f(71));
_f(1) & _f(2) & _f(3) & _f(28) & _f(54) & exclude_airplane.1,(_f(21) & _f(26) => _f(55));
_f(1) & _f(2) & _f(3) & _f(28) & _f(53) & depart.4,(_f(21) & _f(26) => _f(30));
_f(1) & _f(2) & _f(3) & _f(28) & _f(53) & depart.3,(_f(21) & _f(22) => _f(43));
_f(1) & _f(2) & _f(3) & _f(28) & _f(53) & depart.2,(_f(32) => _f(42));
_f(1) & _f(2) & _f(3) & _f(28) & _f(53) & depart.1,(_f(32) => _f(41));
_f(1) & _f(2) & _f(3) & _f(28) & _f(48) & take_track.8,(_f(21) & _f(26) => _f(52));
_f(1) & _f(2) & _f(3) & _f(28) & _f(48) & take_track.7,(_f(21) & _f(24) => _f(51));
_f(1) & _f(2) & _f(3) & _f(28) & _f(48) & take_track.6,(_f(21) & _f(22) => _f(36));
_f(1) & _f(2) & _f(3) & _f(28) & _f(48) & take_track.5,(_f(32) => _f(50));
_f(1) & _f(2) & _f(3) & _f(28) & _f(48) & take_track.4,(_f(32) => _f(49));
_f(1) & _f(2) & _f(3) & _f(28) & _f(48) & take_track.3,(_f(32) => _f(35));
_f(1) & _f(2) & _f(3) & _f(28) & _f(48) & take_track.2,(_f(32) => _f(34));
_f(1) & _f(2) & _f(3) & _f(28) & _f(48) & take_track.1,(_f(32) => _f(33));
_f(1) & _f(2) & _f(3) & _f(28) & _f(46) & board.1,(_f(21) & _f(26) => _f(47));
_f(1) & _f(2) & _f(3) & _f(28) & _f(38) & park.8,(_f(21) & _f(26) => _f(45));
_f(1) & _f(2) & _f(3) & _f(28) & _f(38) & park.7,(_f(21) & _f(24) => _f(44));
_f(1) & _f(2) & _f(3) & _f(28) & _f(38) & park.6,(_f(21) & _f(22) => _f(43));
_f(1) & _f(2) & _f(3) & _f(28) & _f(38) & park.5,(_f(32) => _f(42));
_f(1) & _f(2) & _f(3) & _f(28) & _f(38) & park.4,(_f(32) => _f(41));
_f(1) & _f(2) & _f(3) & _f(28) & _f(38) & park.3,(_f(32) => _f(40));
_f(1) & _f(2) & _f(3) & _f(28) & _f(38) & park.2,(_f(32) => _f(39));
_f(1) & _f(2) & _f(3) & _f(28) & _f(38) & park.1,(_f(32) => _f(33));
_f(1) & _f(2) & _f(3) & _f(28) & _f(31) & land.5,(_f(21) & _f(26) => _f(37));
_f(1) & _f(2) & _f(3) & _f(28) & _f(31) & land.4,(_f(21) & _f(22) => _f(36));
_f(1) & _f(2) & _f(3) & _f(28) & _f(31) & land.3,(_f(32) => _f(35));
_f(1) & _f(2) & _f(3) & _f(28) & _f(31) & land.2,(_f(32) => _f(34));
_f(1) & _f(2) & _f(3) & _f(28) & _f(31) & land.1,(_f(32) => _f(33));
_f(1) & _f(2) & _f(3) & _f(28) & _f(29) & add_airplane.1,(_f(21) & _f(26) => _f(30));
_f(1) & _f(2) & _f(3) & Initialisation.3,(_f(4) & _f(5) & _f(6) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(15) & _f(16) & _f(17) & _f(18) & _f(19) & _f(20) & _f(21) & _f(26) => _f(27));
_f(1) & _f(2) & _f(3) & Initialisation.2,(_f(4) & _f(5) & _f(6) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(15) & _f(16) & _f(17) & _f(18) & _f(19) & _f(20) & _f(21) & _f(24) => _f(25));
_f(1) & _f(2) & _f(3) & Initialisation.1,(_f(4) & _f(5) & _f(6) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(15) & _f(16) & _f(17) & _f(18) & _f(19) & _f(20) & _f(21) & _f(22) => _f(23))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
AIRPLANE: FIN(INTEGER) & not(AIRPLANE = {}) & ((1..6)*{STATUS}): FIN(NATURAL*{STATUS}) & not(((1..6)*{STATUS}) = {}) & ((1..2)*{OCCUPATION}): FIN(NATURAL*{OCCUPATION}) & not(((1..2)*{OCCUPATION}) = {}) & ((sz_gates) : ((NAT-{0}))) & ((sz_tracks) : ((NAT-{0}))) & ((sz_airplanes) : ((NAT-{0}))) & ((gate) = (((0) .. (sz_gates)))) & ((track) = (((0) .. (sz_tracks)))) & ((plane_dummy) : (AIRPLANE));
gates : gate +-> AIRPLANE & dom(gates) = gate & ((gates) : (((gate) --> (AIRPLANE)))) & tracks : track +-> AIRPLANE & dom(tracks) = track & ((tracks) : (((track) --> (AIRPLANE)))) & status_track : track +-> ((1..2)*{OCCUPATION}) & dom(status_track) = track & ((status_track) : (((track) --> (((1..2)*{OCCUPATION}))))) & ((pointer) : (((0) .. (sz_airplanes)))) & airplanes : ((0) .. (sz_airplanes)) +-> AIRPLANE & dom(airplanes) = ((0) .. (sz_airplanes)) & ((airplanes) : (((((0) .. (sz_airplanes))) --> (AIRPLANE)))) & ((((0) .. ((pointer - 1)))) <| (airplanes)) : ((0) .. ((pointer - 1))) +-> AIRPLANE & ((((0) .. ((pointer - 1)))) <| (airplanes)) : ((0) .. ((pointer - 1))) --> AIRPLANE & ((((0) .. ((pointer - 1)))) <| (airplanes))~ : AIRPLANE +-> ((0) .. ((pointer - 1))) & ((((((0) .. ((pointer - 1)))) <| (airplanes))) : (((((0) .. ((pointer - 1)))) >-> (AIRPLANE))));
(gate * ({plane_dummy})) : gate +-> AIRPLANE;
dom((gate * ({plane_dummy}))) = gate;
(((gate * ({plane_dummy}))) : (((gate) --> (AIRPLANE))));
(track * ({plane_dummy})) : track +-> AIRPLANE;
dom((track * ({plane_dummy}))) = track;
(((track * ({plane_dummy}))) : (((track) --> (AIRPLANE))));
(track * ({(2|->OCCUPATION)})) : track +-> ((1..2)*{OCCUPATION});
dom((track * ({(2|->OCCUPATION)}))) = track;
(((track * ({(2|->OCCUPATION)}))) : (((track) --> (((1..2)*{OCCUPATION})))));
((0) : (((0) .. (sz_airplanes))));
(((0) .. (sz_airplanes)) * ({plane_dummy})) : ((0) .. (sz_airplanes)) +-> AIRPLANE;
dom((((0) .. (sz_airplanes)) * ({plane_dummy}))) = ((0) .. (sz_airplanes));
(((((0) .. (sz_airplanes)) * ({plane_dummy}))) : (((((0) .. (sz_airplanes))) --> (AIRPLANE))));
((((0) .. ((0 - 1)))) <| ((((0) .. (sz_airplanes)) * ({plane_dummy})))) : ((0) .. ((0 - 1))) +-> AIRPLANE;
((((0) .. ((0 - 1)))) <| ((((0) .. (sz_airplanes)) * ({plane_dummy})))) : ((0) .. ((0 - 1))) --> AIRPLANE;
((((0) .. ((0 - 1)))) <| ((((0) .. (sz_airplanes)) * ({plane_dummy}))))~ : AIRPLANE +-> ((0) .. ((0 - 1)));
((((((0) .. ((0 - 1)))) <| ((((0) .. (sz_airplanes)) * ({plane_dummy}))))) : (((((0) .. ((0 - 1)))) >-> (AIRPLANE))));
"Invariant is preserved";
"Check invariant ((landing) : (((AIRPLANE) >+> (track))))";
(({}) : (((AIRPLANE) >+> (track))));
"Check invariant ((parking) : (((AIRPLANE) >+> (gate))))";
(({}) : (((AIRPLANE) >+> (gate))));
"Check invariant ((status_airplane) : (((AIRPLANE) --> (STATUS))))";
(((AIRPLANE * ({(1|->STATUS)}))) : (((AIRPLANE) --> (((1..6)*{STATUS})))));
landing : AIRPLANE +-> track & landing~ : track +-> AIRPLANE & ((landing) : (((AIRPLANE) >+> (track)))) & parking : AIRPLANE +-> gate & parking~ : gate +-> AIRPLANE & ((parking) : (((AIRPLANE) >+> (gate)))) & status_airplane : AIRPLANE +-> ((1..6)*{STATUS}) & dom(status_airplane) = AIRPLANE & ((status_airplane) : (((AIRPLANE) --> (((1..6)*{STATUS})))));
((aa) : (AIRPLANE)) & not(aa = plane_dummy) & (((status_airplane )(aa)) = ((1|->STATUS))) & not(aa : ran(((((0) .. ((pointer - 1)))) <| (airplanes)))) & (pointer +1 <= sz_airplanes);
((((status_airplane) <+ (({((aa) |-> ((2|->STATUS)))})))) : (((AIRPLANE) --> (((1..6)*{STATUS})))));
((tt) : (track)) & ((aa) : (ran(((((0) .. ((pointer - 1)))) <| (airplanes))))) & not(aa : dom(landing)) & not(tt : ran(landing)) & not(aa : dom(parking)) & (((status_track )(tt)) = ((2|->OCCUPATION))) & (((status_airplane )(aa)) = ((2|->STATUS)));
"Precondition predicate";
((aa) : (AIRPLANE));
not(aa : ran(tracks));
(((tracks )(tt)) = (plane_dummy));
((((landing) <+ (({((aa) |-> (tt))})))) : (((AIRPLANE) >+> (track))));
((((status_airplane) <+ (({((aa) |-> ((3|->STATUS)))})))) : (((AIRPLANE) --> (((1..6)*{STATUS})))));
((gg) : (gate)) & ((aa) : (dom(landing))) & not(gg : ran(parking)) & not(aa : dom(parking)) & (((status_airplane )(aa)) = ((3|->STATUS))) & ((aa) : (ran(((((0) .. ((pointer - 1)))) <| (airplanes)))));
not(aa : ran(gates));
(((gates )(gg)) = (plane_dummy));
(((landing )(aa)) : (track));
not((tracks )((landing )(aa)) = plane_dummy);
((((({aa})) <<| (landing))) : (((AIRPLANE) >+> (track))));
((((parking) \/ (({((aa) |-> (gg))})))) : (((AIRPLANE) >+> (gate))));
((((status_airplane) <+ (({((aa) |-> ((4|->STATUS)))})))) : (((AIRPLANE) --> (((1..6)*{STATUS})))));
((aa) : (dom(parking))) & (((status_airplane )(aa)) = ((4|->STATUS))) & ((aa) : (ran(((((0) .. ((pointer - 1)))) <| (airplanes)))));
((((status_airplane) <+ (({((aa) |-> ((5|->STATUS)))})))) : (((AIRPLANE) --> (((1..6)*{STATUS})))));
((tt) : (track)) & ((aa) : (ran(((((0) .. ((pointer - 1)))) <| (airplanes))))) & ((aa) : (dom(parking))) & not(tt : ran(landing)) & not(aa : dom(landing)) & (((status_airplane )(aa)) = ((5|->STATUS))) & (((status_track )(tt)) = ((2|->OCCUPATION)));
(((parking )(aa)) : (gate));
not((gates )((parking )(aa)) = plane_dummy);
((((({aa})) <<| (parking))) : (((AIRPLANE) >+> (gate))));
((((status_airplane) <+ (({((aa) |-> ((6|->STATUS)))})))) : (((AIRPLANE) --> (((1..6)*{STATUS})))));
((aa) : (ran(((((0) .. ((pointer - 1)))) <| (airplanes))))) & not(aa : dom(parking)) & ((aa) : (dom(landing))) & (((((status_airplane )(aa)) = ((3|->STATUS)))) or ((((status_airplane )(aa)) = ((6|->STATUS)))));
((aa) : (AIRPLANE)) & ((aa) : (ran(((((0) .. ((pointer - 1)))) <| (airplanes))))) & (((status_airplane )(aa)) = ((2|->STATUS)));
((((status_airplane) <+ (({((aa) |-> ((1|->STATUS)))})))) : (((AIRPLANE) --> (((1..6)*{STATUS})))));
((tt) : (track));
((tt) : (ran(landing)));
not(((tt) : (ran(landing))));
((aa) : (AIRPLANE)) & ((aa) : (dom(parking)));
btrue;
parking : AIRPLANE +-> gate;
parking~ : gate +-> AIRPLANE;
((parking) : (((AIRPLANE) >+> (gate))));
landing : AIRPLANE +-> track;
landing~ : track +-> AIRPLANE;
((landing) : (((AIRPLANE) >+> (track))));
not(aa : ran(((((0) .. ((pointer - 1)))) <| (airplanes))));
(((status_airplane )(aa)) = ((1|->STATUS)));
not(aa = plane_dummy);
"Well definedness";
((aa) : (dom(status_airplane)));
((status_airplane) : (((dom(status_airplane)) +-> (ran(status_airplane)))));
(((status_track )(tt)) = ((2|->OCCUPATION)));
not(aa : dom(parking));
not(tt : ran(landing));
not(aa : dom(landing));
((aa) : (ran(((((0) .. ((pointer - 1)))) <| (airplanes)))));
((tt) : (dom(status_track)));
((status_track) : (((dom(status_track)) +-> (ran(status_track)))));
((aa) : (track));
((aa) : (dom(tracks)));
((tracks) : (((dom(tracks)) +-> (ran(tracks)))));
(((status_airplane )(aa)) = ((3|->STATUS)));
not(gg : ran(parking));
((aa) : (dom(landing)));
((gg) : (gate));
((aa) : (gate));
((aa) : (dom(gates)));
((gates) : (((dom(gates)) +-> (ran(gates)))));
((tt) : (dom(tracks)));
(((status_airplane )(aa)) = ((4|->STATUS)));
((aa) : (dom(parking)));
(((status_airplane )(aa)) = ((5|->STATUS)));
((gg) : (dom(gates)));
not((((status_airplane )(aa)) = ((3|->STATUS))));
((aa) : (dom((((((0) .. ((pointer - 1)))) <| (airplanes)))~)));
(((((((0) .. ((pointer - 1)))) <| (airplanes)))~) : (((dom((((((0) .. ((pointer - 1)))) <| (airplanes)))~)) +-> (ran((((((0) .. ((pointer - 1)))) <| (airplanes)))~)))));
(((pointer - 1)) : (dom(airplanes)));
((airplanes) : (((dom(airplanes)) +-> (ran(airplanes)))));
((parking) : (((dom(parking)) +-> (ran(parking)))))
END
&
THEORY EnumerateX IS
OCCUPATION == {occupied,unoccupied};
STATUS == {out,flighting,alighting,parked,boarding,departing}
END
