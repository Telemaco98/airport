THEORY ProofList IS
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(186) & WellDefinedness_query_parked.4,(_f(140) & _f(165) => _f(179));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(186) & WellDefinedness_query_parked.3,(_f(140) & _f(165) => _f(178));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(186) & WellDefinedness_query_parked.2,(_f(165) => _f(173));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(186) & WellDefinedness_query_parked.1,(_f(165) => _f(144));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(33) & WellDefinedness_query_status.2,(_f(165) => _f(185));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(33) & WellDefinedness_query_status.1,(_f(165) => _f(133));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(42) & WellDefinedness_can_landing.2,(_f(71) & _f(165) => _f(173));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(42) & WellDefinedness_can_landing.1,(_f(71) & _f(165) => _f(144));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(116) & WellDefinedness_exclude_airplane.2,(_f(49) => _f(43));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(116) & WellDefinedness_exclude_airplane.1,(_f(49) => _f(34));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(114) & WellDefinedness_depart.12,(_f(59) & _f(62) & _f(61) & _f(77) => _f(78));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(114) & WellDefinedness_depart.11,(_f(59) & _f(62) & _f(61) & _f(75) => _f(76));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(114) & WellDefinedness_depart.10,(_f(59) & _f(62) & _f(60) & _f(77) => _f(78));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(114) & WellDefinedness_depart.9,(_f(59) & _f(62) & _f(60) & _f(75) => _f(76));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(114) & WellDefinedness_depart.8,(_f(59) & _f(62) & _f(60) & _f(49) => _f(74));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(114) & WellDefinedness_depart.7,(_f(59) & _f(72) => _f(73));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(114) & WellDefinedness_depart.6,(_f(70) => _f(71));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(114) & WellDefinedness_depart.5,(_f(71) & _f(169) & _f(49) => _f(175));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(114) & WellDefinedness_depart.4,(_f(71) & _f(169) & _f(71) & _f(165) => _f(167));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(114) & WellDefinedness_depart.3,(_f(71) & _f(169) & _f(71) & _f(165) => _f(174));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(114) & WellDefinedness_depart.2,(_f(71) & _f(165) => _f(173));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(114) & WellDefinedness_depart.1,(_f(71) & _f(165) => _f(144));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.18,(_f(59) & _f(62) & _f(102) & _f(77) => _f(78));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.17,(_f(59) & _f(62) & _f(102) & _f(75) => _f(76));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.16,(_f(59) & _f(62) & _f(101) & _f(77) => _f(78));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.15,(_f(59) & _f(62) & _f(101) & _f(75) => _f(76));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.14,(_f(59) & _f(62) & _f(101) & _f(49) => _f(105));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.13,(_f(59) & _f(62) & _f(101) & _f(49) => _f(104));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.12,(_f(59) & _f(72) => _f(73));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.11,(_f(70) => _f(71));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.10,(_f(71) & _f(176) & _f(49) => _f(181));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.9,(_f(71) & _f(176) & _f(49) => _f(140));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.8,(_f(71) & _f(176) & _f(140) & _f(165) => _f(172));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.7,(_f(71) & _f(176) & _f(140) & _f(165) => _f(180));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.6,(_f(71) & _f(165) => _f(179));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.5,(_f(71) & _f(165) => _f(178));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.4,(_f(49) => _f(51));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.3,(_f(49) => _f(50));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.2,(_f(33) & _f(164) & _f(50) & _f(165) => _f(167));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(100) & WellDefinedness_take_track.1,(_f(33) & _f(164) & _f(50) & _f(165) => _f(166));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(58) & WellDefinedness_park.16,(_f(59) & _f(62) & _f(61) & _f(77) => _f(78));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(58) & WellDefinedness_park.15,(_f(59) & _f(62) & _f(61) & _f(75) => _f(76));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(58) & WellDefinedness_park.14,(_f(59) & _f(62) & _f(60) & _f(77) => _f(78));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(58) & WellDefinedness_park.13,(_f(59) & _f(62) & _f(60) & _f(75) => _f(76));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(58) & WellDefinedness_park.12,(_f(59) & _f(62) & _f(60) & _f(49) => _f(74));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(58) & WellDefinedness_park.11,(_f(59) & _f(72) => _f(73));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(58) & WellDefinedness_park.10,(_f(70) => _f(71));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(58) & WellDefinedness_park.9,(_f(71) & _f(169) & _f(49) => _f(175));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(58) & WellDefinedness_park.8,(_f(71) & _f(169) & _f(71) & _f(165) => _f(167));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(58) & WellDefinedness_park.7,(_f(71) & _f(169) & _f(71) & _f(165) => _f(174));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(58) & WellDefinedness_park.6,(_f(71) & _f(165) => _f(173));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(58) & WellDefinedness_park.5,(_f(71) & _f(165) => _f(144));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(58) & WellDefinedness_park.4,(_f(49) => _f(69));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(58) & WellDefinedness_park.3,(_f(49) => _f(68));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(58) & WellDefinedness_park.2,(_f(33) & _f(168) & _f(68) & _f(165) => _f(172));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(58) & WellDefinedness_park.1,(_f(33) & _f(168) & _f(68) & _f(165) => _f(171));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(41) & WellDefinedness_land.4,(_f(49) => _f(51));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(41) & WellDefinedness_land.3,(_f(49) => _f(50));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(41) & WellDefinedness_land.2,(_f(33) & _f(164) & _f(50) & _f(165) => _f(167));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(41) & WellDefinedness_land.1,(_f(33) & _f(164) & _f(50) & _f(165) => _f(166));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(30) & WellDefinedness_add_airplane.1,(_f(49) => _f(36));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(135) & query_parked.9,(_f(33) & _f(96) & _f(79) => _f(144));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(135) & query_parked.8,(_f(33) & _f(96) & _f(104) & _f(139) & _f(81) => _f(143));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(135) & query_parked.7,(_f(33) & _f(96) & _f(104) & _f(138) & _f(79) => _f(142));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(135) & query_parked.6,(_f(33) & _f(96) & _f(104) & _f(138) & _f(137) & _f(77) => _f(127));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(135) & query_parked.5,(_f(33) & _f(96) & _f(104) & _f(138) & _f(137) & _f(75) => _f(141));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(135) & query_parked.4,(_f(33) & _f(96) & _f(104) & _f(138) & _f(136) & _f(77) => _f(127));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(135) & query_parked.3,(_f(33) & _f(96) & _f(104) & _f(138) & _f(136) & _f(75) => _f(141));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(135) & query_parked.2,(_f(33) & _f(96) & _f(104) & _f(72) => _f(126));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(135) & query_parked.1,(_f(33) & _f(96) & _f(70) => _f(140));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(120) & query_status.2,(_f(33) & _f(79) => _f(133));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(120) & query_status.1,(_f(33) & _f(17) => _f(132));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(120) & can_landing.9,(_f(42) & _f(59) & _f(63) & _f(125) & _f(81) => _f(130));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(120) & can_landing.8,(_f(42) & _f(59) & _f(63) & _f(124) & _f(81) => _f(129));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(120) & can_landing.7,(_f(42) & _f(59) & _f(62) & _f(79) => _f(128));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(120) & can_landing.6,(_f(42) & _f(59) & _f(62) & _f(123) & _f(77) => _f(127));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(120) & can_landing.5,(_f(42) & _f(59) & _f(62) & _f(123) & _f(75) => _f(76));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(120) & can_landing.4,(_f(42) & _f(59) & _f(62) & _f(121) & _f(122) & _f(77) => _f(127));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(120) & can_landing.3,(_f(42) & _f(59) & _f(62) & _f(121) & _f(122) & _f(75) => _f(76));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(120) & can_landing.2,(_f(42) & _f(59) & _f(72) => _f(126));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(120) & can_landing.1,(_f(42) & _f(70) => _f(71));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & exclude_airplane.3,(_f(33) & _f(43) & _f(48) & _f(17) & _f(39) => _f(118));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & exclude_airplane.2,(_f(33) & _f(43) & _f(48) & _f(17) & _f(26) => _f(117));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & exclude_airplane.1,(_f(33) & _f(43) & _f(48) & _f(49) => _f(34));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & depart.15,(_f(33) & _f(43) & _f(46) & _f(65) & _f(115) & _f(59) & _f(63) & _f(81) & _f(39) => _f(40));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & depart.14,(_f(33) & _f(43) & _f(46) & _f(65) & _f(115) & _f(59) & _f(63) & _f(81) & _f(26) => _f(38));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & depart.13,(_f(33) & _f(43) & _f(46) & _f(65) & _f(115) & _f(59) & _f(63) & _f(81) & _f(20) => _f(88));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & depart.12,(_f(33) & _f(43) & _f(46) & _f(65) & _f(115) & _f(59) & _f(63) & _f(81) & _f(18) => _f(87));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & depart.11,(_f(33) & _f(43) & _f(46) & _f(65) & _f(115) & _f(59) & _f(63) & _f(81) & _f(52) => _f(86));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & depart.10,(_f(33) & _f(43) & _f(46) & _f(65) & _f(115) & _f(59) & _f(63) & _f(81) & _f(84) => _f(85));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & depart.9,(_f(33) & _f(43) & _f(46) & _f(65) & _f(115) & _f(59) & _f(63) & _f(81) & _f(82) => _f(83));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & depart.8,(_f(33) & _f(43) & _f(46) & _f(65) & _f(115) & _f(59) & _f(62) & _f(79) => _f(80));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & depart.7,(_f(33) & _f(43) & _f(46) & _f(65) & _f(115) & _f(59) & _f(62) & _f(61) & _f(77) => _f(78));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & depart.6,(_f(33) & _f(43) & _f(46) & _f(65) & _f(115) & _f(59) & _f(62) & _f(61) & _f(75) => _f(76));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & depart.5,(_f(33) & _f(43) & _f(46) & _f(65) & _f(115) & _f(59) & _f(62) & _f(60) & _f(77) => _f(78));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & depart.4,(_f(33) & _f(43) & _f(46) & _f(65) & _f(115) & _f(59) & _f(62) & _f(60) & _f(75) => _f(76));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & depart.3,(_f(33) & _f(43) & _f(46) & _f(65) & _f(115) & _f(59) & _f(62) & _f(60) & _f(49) => _f(74));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & depart.2,(_f(33) & _f(43) & _f(46) & _f(65) & _f(115) & _f(59) & _f(72) => _f(73));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & depart.1,(_f(33) & _f(43) & _f(46) & _f(65) & _f(115) & _f(70) => _f(71));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.20,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(59) & _f(63) & _f(81) & _f(39) => _f(113));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.19,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(59) & _f(63) & _f(81) & _f(26) => _f(112));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.18,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(59) & _f(63) & _f(81) & _f(24) => _f(111));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.17,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(59) & _f(63) & _f(81) & _f(22) => _f(110));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.16,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(59) & _f(63) & _f(81) & _f(89) => _f(109));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.15,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(59) & _f(63) & _f(81) & _f(20) => _f(55));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.14,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(59) & _f(63) & _f(81) & _f(18) => _f(54));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.13,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(59) & _f(63) & _f(81) & _f(52) => _f(53));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.12,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(59) & _f(63) & _f(81) & _f(107) => _f(108));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.11,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(59) & _f(62) & _f(79) => _f(106));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.10,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(59) & _f(62) & _f(102) & _f(77) => _f(78));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.9,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(59) & _f(62) & _f(102) & _f(75) => _f(76));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.8,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(59) & _f(62) & _f(101) & _f(77) => _f(78));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.7,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(59) & _f(62) & _f(101) & _f(75) => _f(76));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.6,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(59) & _f(62) & _f(101) & _f(49) => _f(105));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.5,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(59) & _f(62) & _f(101) & _f(49) => _f(104));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.4,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(59) & _f(72) => _f(73));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.3,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(70) => _f(71));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.2,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(49) => _f(51));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & take_track.1,(_f(42) & _f(33) & _f(43) & _f(96) & _f(45) & _f(44) & _f(103) & _f(47) & _f(49) => _f(50));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & board.2,(_f(33) & _f(96) & _f(97) & _f(43) & _f(17) & _f(39) => _f(99));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & board.1,(_f(33) & _f(96) & _f(97) & _f(43) & _f(17) & _f(26) => _f(98));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.20,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(59) & _f(63) & _f(81) & _f(39) => _f(94));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.19,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(59) & _f(63) & _f(81) & _f(26) => _f(93));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.18,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(59) & _f(63) & _f(81) & _f(24) => _f(92));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.17,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(59) & _f(63) & _f(81) & _f(22) => _f(91));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.16,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(59) & _f(63) & _f(81) & _f(89) => _f(90));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.15,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(59) & _f(63) & _f(81) & _f(20) => _f(88));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.14,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(59) & _f(63) & _f(81) & _f(18) => _f(87));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.13,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(59) & _f(63) & _f(81) & _f(52) => _f(86));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.12,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(59) & _f(63) & _f(81) & _f(84) => _f(85));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.11,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(59) & _f(63) & _f(81) & _f(82) => _f(83));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.10,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(59) & _f(62) & _f(79) => _f(80));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.9,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(59) & _f(62) & _f(61) & _f(77) => _f(78));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.8,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(59) & _f(62) & _f(61) & _f(75) => _f(76));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.7,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(59) & _f(62) & _f(60) & _f(77) => _f(78));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.6,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(59) & _f(62) & _f(60) & _f(75) => _f(76));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.5,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(59) & _f(62) & _f(60) & _f(49) => _f(74));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.4,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(59) & _f(72) => _f(73));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.3,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(70) => _f(71));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.2,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(49) => _f(69));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & park.1,(_f(64) & _f(33) & _f(65) & _f(66) & _f(46) & _f(67) & _f(43) & _f(49) => _f(68));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & land.7,(_f(42) & _f(33) & _f(43) & _f(44) & _f(45) & _f(46) & _f(47) & _f(48) & _f(17) & _f(39) => _f(57));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & land.6,(_f(42) & _f(33) & _f(43) & _f(44) & _f(45) & _f(46) & _f(47) & _f(48) & _f(17) & _f(26) => _f(56));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & land.5,(_f(42) & _f(33) & _f(43) & _f(44) & _f(45) & _f(46) & _f(47) & _f(48) & _f(17) & _f(20) => _f(55));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & land.4,(_f(42) & _f(33) & _f(43) & _f(44) & _f(45) & _f(46) & _f(47) & _f(48) & _f(17) & _f(18) => _f(54));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & land.3,(_f(42) & _f(33) & _f(43) & _f(44) & _f(45) & _f(46) & _f(47) & _f(48) & _f(17) & _f(52) => _f(53));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & land.2,(_f(42) & _f(33) & _f(43) & _f(44) & _f(45) & _f(46) & _f(47) & _f(48) & _f(49) => _f(51));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & land.1,(_f(42) & _f(33) & _f(43) & _f(44) & _f(45) & _f(46) & _f(47) & _f(48) & _f(49) => _f(50));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & add_airplane.3,(_f(33) & _f(34) & _f(35) & _f(36) & _f(31) & _f(32) & _f(17) & _f(39) => _f(40));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & add_airplane.2,(_f(33) & _f(34) & _f(35) & _f(36) & _f(31) & _f(32) & _f(17) & _f(26) => _f(38));
_f(1) & _f(2) & _f(4) & _f(28) & _f(29) & _f(3) & add_airplane.1,(_f(33) & _f(34) & _f(35) & _f(36) & _f(31) & _f(32) & _f(17) => _f(37));
_f(1) & _f(2) & _f(4) & Initialisation.5,(_f(5) & _f(6) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(15) & _f(16) & _f(17) & _f(26) => _f(27));
_f(1) & _f(2) & _f(4) & Initialisation.4,(_f(5) & _f(6) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(15) & _f(16) & _f(17) & _f(24) => _f(25));
_f(1) & _f(2) & _f(4) & Initialisation.3,(_f(5) & _f(6) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(15) & _f(16) & _f(17) & _f(22) => _f(23));
_f(1) & _f(2) & _f(4) & Initialisation.2,(_f(5) & _f(6) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(15) & _f(16) & _f(17) & _f(20) => _f(21));
_f(1) & _f(2) & _f(4) & Initialisation.1,(_f(5) & _f(6) & _f(7) & _f(8) & _f(9) & _f(10) & _f(11) & _f(12) & _f(13) & _f(14) & _f(15) & _f(16) & _f(17) & _f(18) => _f(19))
END
&
THEORY Formulas IS
((NAT) = (((0) .. (2147483647)))) & ((INT) = (((-2147483647) .. (2147483647))));
AIRPLANE: FIN(INTEGER) & not(AIRPLANE = {}) & ((1..6)*{STATUS}): FIN(NATURAL*{STATUS}) & not(((1..6)*{STATUS}) = {}) & ((1..2)*{OCCUPATION}): FIN(NATURAL*{OCCUPATION}) & not(((1..2)*{OCCUPATION}) = {}) & ((sz_gates) : ((NAT-{0}))) & (1 +1 <= sz_gates) & ((sz_tracks) : ((NAT-{0}))) & (1 +1 <= sz_tracks) & ((sz_airplanes) : ((NAT-{0}))) & (1 +1 <= sz_airplanes) & ((plane_dummy) : (AIRPLANE));
btrue;
airplanes$1 : ((0) .. (sz_airplanes)) +-> AIRPLANE & airplanes$1~ : AIRPLANE +-> ((0) .. (sz_airplanes)) & ((airplanes$1) : (((((0) .. (sz_airplanes))) >+> (AIRPLANE)))) & tracks$1 : ((0) .. (sz_tracks)) +-> AIRPLANE & dom(tracks$1) = ((0) .. (sz_tracks)) & ((tracks$1) : (((((0) .. (sz_tracks))) --> (AIRPLANE)))) & status_track$1 : ((0) .. (sz_tracks)) +-> ((1..2)*{OCCUPATION}) & dom(status_track$1) = ((0) .. (sz_tracks)) & ((status_track$1) : (((((0) .. (sz_tracks))) --> (((1..2)*{OCCUPATION}))))) & gates$1 : ((0) .. (sz_gates)) +-> AIRPLANE & dom(gates$1) = ((0) .. (sz_gates)) & ((gates$1) : (((((0) .. (sz_gates))) --> (AIRPLANE))));
{} : ((0) .. (sz_airplanes)) +-> AIRPLANE;
{}~ : AIRPLANE +-> ((0) .. (sz_airplanes));
(({}) : (((((0) .. (sz_airplanes))) >+> (AIRPLANE))));
(((0) .. (sz_tracks)) * ({plane_dummy})) : ((0) .. (sz_tracks)) +-> AIRPLANE;
dom((((0) .. (sz_tracks)) * ({plane_dummy}))) = ((0) .. (sz_tracks));
(((((0) .. (sz_tracks)) * ({plane_dummy}))) : (((((0) .. (sz_tracks))) --> (AIRPLANE))));
(((0) .. (sz_tracks)) * ({(2|->OCCUPATION)})) : ((0) .. (sz_tracks)) +-> ((1..2)*{OCCUPATION});
dom((((0) .. (sz_tracks)) * ({(2|->OCCUPATION)}))) = ((0) .. (sz_tracks));
(((((0) .. (sz_tracks)) * ({(2|->OCCUPATION)}))) : (((((0) .. (sz_tracks))) --> (((1..2)*{OCCUPATION})))));
(((0) .. (sz_gates)) * ({plane_dummy})) : ((0) .. (sz_gates)) +-> AIRPLANE;
dom((((0) .. (sz_gates)) * ({plane_dummy}))) = ((0) .. (sz_gates));
(((((0) .. (sz_gates)) * ({plane_dummy}))) : (((((0) .. (sz_gates))) --> (AIRPLANE))));
"Refinement is correct";
"Check invariant ((dom(landing_i$1)) = (ran(landing)))";
((dom((((0) .. (sz_tracks)) * ({plane_dummy})))) = (ran({})));
"Check invariant (((((landing_i$1) |>> (({plane_dummy}))))~) = (landing))";
((((((((0) .. (sz_tracks)) * ({plane_dummy}))) |>> (({plane_dummy}))))~) = ({}));
"Check invariant ((dom(parking_i$1)) = (ran(parking)))";
((dom((((0) .. (sz_gates)) * ({plane_dummy})))) = (ran({})));
"Check invariant (((((parking_i$1) |>> (({plane_dummy}))))~) = (parking))";
((((((((0) .. (sz_gates)) * ({plane_dummy}))) |>> (({plane_dummy}))))~) = ({}));
"Check invariant ((status_airplane_i$1) : (((AIRPLANE) --> (STATUS))))";
(((AIRPLANE * ({(1|->STATUS)}))) : (((AIRPLANE) --> (((1..6)*{STATUS})))));
landing : AIRPLANE +-> ((0) .. (sz_tracks)) & landing~ : ((0) .. (sz_tracks)) +-> AIRPLANE & ((landing) : (((AIRPLANE) >+> (((0) .. (sz_tracks)))))) & parking : AIRPLANE +-> ((0) .. (sz_gates)) & parking~ : ((0) .. (sz_gates)) +-> AIRPLANE & ((parking) : (((AIRPLANE) >+> (((0) .. (sz_gates)))))) & status_airplane : AIRPLANE +-> ((1..6)*{STATUS}) & dom(status_airplane) = AIRPLANE & ((status_airplane) : (((AIRPLANE) --> (((1..6)*{STATUS}))))) & gates : ((0) .. (sz_gates)) +-> AIRPLANE & dom(gates) = ((0) .. (sz_gates)) & ((gates) : (((((0) .. (sz_gates))) --> (AIRPLANE)))) & tracks : ((0) .. (sz_tracks)) +-> AIRPLANE & dom(tracks) = ((0) .. (sz_tracks)) & ((tracks) : (((((0) .. (sz_tracks))) --> (AIRPLANE)))) & status_track : ((0) .. (sz_tracks)) +-> ((1..2)*{OCCUPATION}) & dom(status_track) = ((0) .. (sz_tracks)) & ((status_track) : (((((0) .. (sz_tracks))) --> (((1..2)*{OCCUPATION}))))) & airplanes : ((0) .. (sz_airplanes)) +-> AIRPLANE & airplanes~ : AIRPLANE +-> ((0) .. (sz_airplanes)) & ((airplanes) : (((((0) .. (sz_airplanes))) >+> (AIRPLANE))));
((airplanes) = (airplanes$1)) & ((tracks) = (tracks$1)) & ((status_track) = (status_track$1)) & ((gates) = (gates$1)) & landing_i$1 : ((0) .. (sz_tracks)) +-> AIRPLANE & dom(landing_i$1) = ((0) .. (sz_tracks)) & ((landing_i$1) : (((((0) .. (sz_tracks))) --> (AIRPLANE)))) & ((dom(landing_i$1)) = (ran(landing))) & (((((landing_i$1) |>> (({plane_dummy}))))~) = (landing)) & parking_i$1 : ((0) .. (sz_gates)) +-> AIRPLANE & dom(parking_i$1) = ((0) .. (sz_gates)) & ((parking_i$1) : (((((0) .. (sz_gates))) --> (AIRPLANE)))) & ((dom(parking_i$1)) = (ran(parking))) & (((((parking_i$1) |>> (({plane_dummy}))))~) = (parking)) & status_airplane_i$1 : AIRPLANE +-> ((1..6)*{STATUS}) & dom(status_airplane_i$1) = AIRPLANE & ((status_airplane_i$1) : (((AIRPLANE) --> (((1..6)*{STATUS}))))) & ((status_airplane_i$1) = (status_airplane));
((aa) : (AIRPLANE)) & not(aa = plane_dummy) & (((status_airplane )(aa)) = ((1|->STATUS))) & not(aa : ran(airplanes));
((xx$1) : (((0) .. (sz_airplanes))));
not(xx$1 : dom(airplanes$1));
((aa) : (AIRPLANE));
not(aa = plane_dummy);
(((status_airplane )(aa)) = ((1|->STATUS)));
not(aa : ran(airplanes$1));
#(xx).(((xx) : (((0) .. (sz_airplanes)))) & not(xx : dom(airplanes$1)) & ((((airplanes$1) <+ (({((xx) |-> (aa))})))) = (((airplanes$1) <+ (({((xx$1) |-> (aa))}))))));
((((status_airplane_i$1) <+ (({((aa) |-> ((2|->STATUS)))})))) : (((AIRPLANE) --> (((1..6)*{STATUS})))));
"Check invariant ((status_airplane_i$1) = (status_airplane))";
((((status_airplane_i$1) <+ (({((aa) |-> ((2|->STATUS)))})))) = (((status_airplane) <+ (({((aa) |-> ((2|->STATUS)))})))));
((tt) : (((0) .. (sz_tracks)))) & ((aa) : (AIRPLANE)) & ((aa) : (ran(airplanes))) & not(aa : dom(landing)) & not(tt : ran(landing)) & not(aa : dom(parking)) & (((status_track )(tt)) = ((2|->OCCUPATION))) & (((status_airplane )(aa)) = ((2|->STATUS)));
((tt) : (((0) .. (sz_tracks))));
((aa) : (ran(airplanes$1)));
not(aa : dom(landing));
not(tt : ran(landing));
not(aa : dom(parking));
(((status_track$1 )(tt)) = ((2|->OCCUPATION)));
(((status_airplane )(aa)) = ((2|->STATUS)));
"Precondition predicate";
not(aa : ran(tracks$1));
(((tracks$1 )(tt)) = (plane_dummy));
"Check invariant ((landing_i$1) : (((((0) .. (sz_tracks))) --> (AIRPLANE))))";
((((landing_i$1) <+ (({((tt) |-> (aa))})))) : (((((0) .. (sz_tracks))) --> (AIRPLANE))));
((dom(((landing_i$1) <+ (({((tt) |-> (aa))}))))) = (ran(((landing) <+ (({((aa) |-> (tt))}))))));
(((((((landing_i$1) <+ (({((tt) |-> (aa))})))) |>> (({plane_dummy}))))~) = (((landing) <+ (({((aa) |-> (tt))})))));
((((status_airplane_i$1) <+ (({((aa) |-> ((3|->STATUS)))})))) : (((AIRPLANE) --> (((1..6)*{STATUS})))));
((((status_airplane_i$1) <+ (({((aa) |-> ((3|->STATUS)))})))) = (((status_airplane) <+ (({((aa) |-> ((3|->STATUS)))})))));
((gg) : (((0) .. (sz_gates)))) & ((aa) : (AIRPLANE)) & ((aa) : (dom(landing))) & not(gg : ran(parking)) & not(aa : dom(parking)) & (((status_airplane )(aa)) = ((3|->STATUS))) & ((aa) : (ran(airplanes)));
((ii$1) : (((0) .. (sz_tracks))));
(((landing_i$2 )(ii$1)) = (aa));
not((((landing_i$2 )(ii$1)) = (aa)));
(ii$1 +1 <= sz_tracks);
not((ii$1 +1 <= sz_tracks));
((gg) : (((0) .. (sz_gates))));
((aa) : (dom(landing)));
not(gg : ran(parking));
(((status_airplane )(aa)) = ((3|->STATUS)));
not(aa : ran(gates$1));
(((gates$1 )(gg)) = (plane_dummy));
"Loop initialisation";
((0) : (((0) .. (sz_tracks))));
"Loop variant is positive";
(0 <= (sz_tracks - ii$1));
not((tracks$2 )(ii$1) = plane_dummy);
"Loop invariant is preserved";
(((ii$1 + 1)) : (((0) .. (sz_tracks))));
"Variant is decreasing";
((sz_tracks - (ii$1 + 1)) +1 <= (sz_tracks - ii$1));
"Instruction Well Definess";
((ii$1) : (dom(landing_i$2)));
"End of loop";
"Check invariant ((tracks) = (tracks$1))";
((((tracks$1) <+ (({(((landing )(aa)) |-> (plane_dummy))})))) = (tracks$2));
"Check invariant ((status_track) = (status_track$1))";
((((status_track$1) <+ (({(((landing )(aa)) |-> ((2|->OCCUPATION)))})))) = (status_track$2));
((landing_i$2) : (((((0) .. (sz_tracks))) --> (AIRPLANE))));
((dom(landing_i$2)) = (ran(((({aa})) <<| (landing)))));
(((((landing_i$2) |>> (({plane_dummy}))))~) = (((({aa})) <<| (landing))));
"Check invariant ((parking_i$1) : (((((0) .. (sz_gates))) --> (AIRPLANE))))";
((((parking_i$1) <+ (({((gg) |-> (aa))})))) : (((((0) .. (sz_gates))) --> (AIRPLANE))));
((dom(((parking_i$1) <+ (({((gg) |-> (aa))}))))) = (ran(((parking) \/ (({((aa) |-> (gg))}))))));
(((((((parking_i$1) <+ (({((gg) |-> (aa))})))) |>> (({plane_dummy}))))~) = (((parking) \/ (({((aa) |-> (gg))})))));
((((status_airplane_i$1) <+ (({((aa) |-> ((4|->STATUS)))})))) : (((AIRPLANE) --> (((1..6)*{STATUS})))));
((((status_airplane_i$1) <+ (({((aa) |-> ((4|->STATUS)))})))) = (((status_airplane) <+ (({((aa) |-> ((4|->STATUS)))})))));
((aa) : (AIRPLANE)) & ((aa) : (dom(parking))) & (((status_airplane )(aa)) = ((4|->STATUS))) & ((aa) : (ran(airplanes)));
((aa) : (dom(parking)));
(((status_airplane )(aa)) = ((4|->STATUS)));
((((status_airplane_i$1) <+ (({((aa) |-> ((5|->STATUS)))})))) : (((AIRPLANE) --> (((1..6)*{STATUS})))));
((((status_airplane_i$1) <+ (({((aa) |-> ((5|->STATUS)))})))) = (((status_airplane) <+ (({((aa) |-> ((5|->STATUS)))})))));
((tt) : (((0) .. (sz_tracks)))) & ((aa) : (AIRPLANE)) & ((aa) : (ran(airplanes))) & ((aa) : (dom(parking))) & not(tt : ran(landing)) & not(aa : dom(landing)) & (((status_airplane )(aa)) = ((5|->STATUS))) & (((status_track )(tt)) = ((2|->OCCUPATION)));
(((parking_i$2 )(ii$1)) = (aa));
not((((parking_i$2 )(ii$1)) = (aa)));
(((status_airplane )(aa)) = ((5|->STATUS)));
((ii$1) : (((0) .. (sz_gates))));
not((gates$2 )(ii$1) = plane_dummy);
((ii$1) : (dom(parking_i$2)));
"Check invariant ((gates) = (gates$1))";
((((gates$1) <+ (({(((parking )(aa)) |-> (plane_dummy))})))) = (gates$2));
((parking_i$2) : (((((0) .. (sz_gates))) --> (AIRPLANE))));
((dom(parking_i$2)) = (ran(((({aa})) <<| (parking)))));
(((((parking_i$2) |>> (({plane_dummy}))))~) = (((({aa})) <<| (parking))));
((status_airplane_i$2) : (((AIRPLANE) --> (((1..6)*{STATUS})))));
((status_airplane_i$2) = (((status_airplane) <+ (({((aa) |-> ((6|->STATUS)))})))));
((aa) : (AIRPLANE)) & ((aa) : (ran(airplanes))) & not(aa : dom(parking)) & ((aa) : (dom(landing))) & (((((status_airplane )(aa)) = ((3|->STATUS)))) or ((((status_airplane )(aa)) = ((6|->STATUS)))));
(((((status_airplane )(aa)) = ((3|->STATUS)))) or ((((status_airplane )(aa)) = ((6|->STATUS)))));
((aa) : (AIRPLANE)) & ((aa) : (ran(airplanes))) & (((status_airplane )(aa)) = ((2|->STATUS)));
((((status_airplane_i$1) <+ (({((aa) |-> ((1|->STATUS)))})))) : (((AIRPLANE) --> (((1..6)*{STATUS})))));
((((status_airplane_i$1) <+ (({((aa) |-> ((1|->STATUS)))})))) = (((status_airplane) <+ (({((aa) |-> ((1|->STATUS)))})))));
((tt) : (((0) .. (sz_tracks)))) & ((bb) = (bb));
((bb$1) = (bb));
((tt) = (ii$1));
((plane_dummy) = ((landing_i$1 )(ii$1)));
not(((tt) = (ii$1)) & ((plane_dummy) = ((landing_i$1 )(ii$1))));
((tt) : (ran(landing)));
not(((tt) : (ran(landing))));
(0 <= (sz_gates - ii$1));
((sz_gates - (ii$1 + 1)) +1 <= (sz_gates - ii$1));
((ii$1) : (dom(landing_i$1)));
((bb$2) = (FALSE));
((bb$2) = (TRUE));
((aa) : (AIRPLANE)) & ((bb) = (bb));
(((status_airplane_i$1 )(aa)) = ((status_airplane )(aa)));
((aa) : (dom(status_airplane_i$1)));
((aa) : (AIRPLANE)) & ((aa) : (dom(parking))) & ((gg) = (gg));
((gg$1) = (gg));
((aa) = ((parking_i$1 )(ii$1)));
not(((aa) = ((parking_i$1 )(ii$1))));
(ii$1 +1 <= sz_gates);
not((ii$1 +1 <= sz_gates));
((0) : (((0) .. (sz_gates))));
(((ii$1 + 1)) : (((0) .. (sz_gates))));
((ii$1) : (dom(parking_i$1)));
((gg$2) = ((parking )(aa)));
((0) : (dom(landing_i$1)));
status_airplane_i$1 : AIRPLANE +-> ((1..6)*{STATUS});
dom(status_airplane_i$1) = AIRPLANE;
((status_airplane_i$1) : (((AIRPLANE) --> (((1..6)*{STATUS})))));
(((((parking_i$1) |>> (({plane_dummy}))))~) = (parking));
((dom(parking_i$1)) = (ran(parking)));
parking_i$1 : ((0) .. (sz_gates)) +-> AIRPLANE;
dom(parking_i$1) = ((0) .. (sz_gates));
((parking_i$1) : (((((0) .. (sz_gates))) --> (AIRPLANE))));
(((((landing_i$1) |>> (({plane_dummy}))))~) = (landing));
((dom(landing_i$1)) = (ran(landing)));
landing_i$1 : ((0) .. (sz_tracks)) +-> AIRPLANE;
dom(landing_i$1) = ((0) .. (sz_tracks));
((landing_i$1) : (((((0) .. (sz_tracks))) --> (AIRPLANE))));
((gates) = (gates$1));
((status_track) = (status_track$1));
((tracks) = (tracks$1));
((airplanes) = (airplanes$1));
((xx) : (((0) .. (sz_airplanes))));
not(xx : dom(airplanes$1));
((aa) : (((0) .. (sz_tracks))));
"Well definedness";
((aa) : (dom(tracks$1)));
((tracks$1) : (((dom(tracks$1)) +-> (ran(tracks$1)))));
((aa) : (((0) .. (sz_gates))));
(((landing_i$1 )(0)) = (aa));
not((((landing_i$1 )(0)) = (aa)));
((aa) : (dom(gates$1)));
((gates$1) : (((dom(gates$1)) +-> (ran(gates$1)))));
((landing_i$1) : (((dom(landing_i$1)) +-> (ran(landing_i$1)))));
((0) : (dom(tracks$1)));
not((tracks$1 )(0) = plane_dummy);
(((parking_i$1 )(0)) = (aa));
not((((parking_i$1 )(0)) = (aa)));
((0) : (dom(parking_i$1)));
((parking_i$1) : (((dom(parking_i$1)) +-> (ran(parking_i$1)))));
((0) : (dom(gates$1)));
not((gates$1 )(0) = plane_dummy);
((tt) = (0));
((plane_dummy) = ((landing_i$1 )(0)));
not(((tt) = (0)) & ((plane_dummy) = ((landing_i$1 )(0))));
((status_airplane_i$1) : (((dom(status_airplane_i$1)) +-> (ran(status_airplane_i$1)))));
((aa) : (AIRPLANE)) & ((aa) : (dom(parking)));
((aa) = ((parking_i$1 )(0)));
not(((aa) = ((parking_i$1 )(0))))
END
&
THEORY EnumerateX IS
OCCUPATION == {occupied,unoccupied};
STATUS == {out,flighting,alighting,parked,boarding,departing}
END
